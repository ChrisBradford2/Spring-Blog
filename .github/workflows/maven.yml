# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Heroku Action
        # You may pin to the exact commit or the version.
        # uses: CDNievas/heroku-action@c9cf9c85571e67583e44ec92c0d1113f66b0e838
        uses: CDNievas/heroku-action@v1.0
        with:
          # Used for authentication. You can find it in your heroku homepage account settings
          heroku_api_key: a5101915-a815-454a-b00f-04d2dc0f5931
          # Email from Heroku Account
          heroku_email: nico.bar2012@gmail.com
          # The appname to use for deploying/updating
          heroku_app_name: spring-blog-ynov
          # The branch that you would like to deploy to Heroku
          branch: main
          # # Set this to true if want to use --force
          # useforce: # optional
          # # Set if your app is located in a subdirectory.
          # appdir: # optional, default is
          # # Contents of the Procfile to save and deploy
          # procfile: # optional, default is
          # # Set to true if you need upload files generated dynamically by the GitHub Action to Heroku
          # dynamicFiles: # optional
          # # Buildpacks to install on Heroku
          # buildpacks: # optional, default is
          # # # Path to an localized env file
        # env_file: # optional, default is 
